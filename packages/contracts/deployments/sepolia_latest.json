{
  "ShieldlyCore": {
    "classHash": "0x3b93bda4dbb10a643ad10fa4ad22b24ee7423571d168780e51be3df162bebc",
    "address": "0x22ede75b164f12f10b2d365e6bdaf96aa7f750e15a8979e12686ed984127c5a",
    "contract": "shieldly_ShieldlyCore",
    "abi": [
      {
        "type": "impl",
        "name": "ShieldlyCoreImpl",
        "interface_name": "shieldly::interface::core::IShieldlyCore"
      },
      {
        "type": "enum",
        "name": "core::bool",
        "variants": [
          {
            "name": "False",
            "type": "()"
          },
          {
            "name": "True",
            "type": "()"
          }
        ]
      },
      {
        "type": "enum",
        "name": "shieldly::types::types::UserStatus",
        "variants": [
          {
            "name": "INACTIVE",
            "type": "()"
          },
          {
            "name": "ACTIVE",
            "type": "()"
          },
          {
            "name": "BANNED",
            "type": "()"
          }
        ]
      },
      {
        "type": "struct",
        "name": "core::integer::u256",
        "members": [
          {
            "name": "low",
            "type": "core::integer::u128"
          },
          {
            "name": "high",
            "type": "core::integer::u128"
          }
        ]
      },
      {
        "type": "struct",
        "name": "shieldly::types::types::UserProfile",
        "members": [
          {
            "name": "address",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "status",
            "type": "shieldly::types::types::UserStatus"
          },
          {
            "name": "kyc_verified",
            "type": "core::bool"
          },
          {
            "name": "policies_count",
            "type": "core::integer::u32"
          },
          {
            "name": "funder_stake",
            "type": "core::integer::u256"
          },
          {
            "name": "accrued_yield",
            "type": "core::integer::u256"
          },
          {
            "name": "last_yield_claimed",
            "type": "core::integer::u64"
          }
        ]
      },
      {
        "type": "struct",
        "name": "shieldly::types::types::PolicyMetadata",
        "members": [
          {
            "name": "coverage_amount",
            "type": "core::integer::u256"
          },
          {
            "name": "premium_amount",
            "type": "core::integer::u256"
          },
          {
            "name": "payout_amount",
            "type": "core::integer::u256"
          },
          {
            "name": "term_days",
            "type": "core::integer::u32"
          },
          {
            "name": "trigger_description",
            "type": "core::felt252"
          },
          {
            "name": "details",
            "type": "core::felt252"
          }
        ]
      },
      {
        "type": "enum",
        "name": "shieldly::types::types::PolicyStatus",
        "variants": [
          {
            "name": "DRAFT",
            "type": "()"
          },
          {
            "name": "ACTIVE",
            "type": "()"
          },
          {
            "name": "EXPIRED",
            "type": "()"
          },
          {
            "name": "PAUSED",
            "type": "()"
          }
        ]
      },
      {
        "type": "struct",
        "name": "shieldly::types::types::Policy",
        "members": [
          {
            "name": "id",
            "type": "core::integer::u256"
          },
          {
            "name": "creator",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "metadata",
            "type": "shieldly::types::types::PolicyMetadata"
          },
          {
            "name": "status",
            "type": "shieldly::types::types::PolicyStatus"
          },
          {
            "name": "creation_time",
            "type": "core::integer::u64"
          },
          {
            "name": "approval_time",
            "type": "core::integer::u64"
          }
        ]
      },
      {
        "type": "struct",
        "name": "shieldly::types::types::UserPolicy",
        "members": [
          {
            "name": "policy_id",
            "type": "core::integer::u256"
          },
          {
            "name": "user",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "purchase_time",
            "type": "core::integer::u64"
          },
          {
            "name": "expiry_time",
            "type": "core::integer::u64"
          },
          {
            "name": "is_active",
            "type": "core::bool"
          }
        ]
      },
      {
        "type": "enum",
        "name": "shieldly::types::types::ClaimStatus",
        "variants": [
          {
            "name": "PENDING",
            "type": "()"
          },
          {
            "name": "APPROVED",
            "type": "()"
          },
          {
            "name": "REJECTED",
            "type": "()"
          },
          {
            "name": "PAID",
            "type": "()"
          }
        ]
      },
      {
        "type": "struct",
        "name": "shieldly::types::types::Claim",
        "members": [
          {
            "name": "id",
            "type": "core::integer::u256"
          },
          {
            "name": "policy_id",
            "type": "core::integer::u256"
          },
          {
            "name": "claimant",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "evidence_hash",
            "type": "core::felt252"
          },
          {
            "name": "status",
            "type": "shieldly::types::types::ClaimStatus"
          },
          {
            "name": "submission_time",
            "type": "core::integer::u64"
          },
          {
            "name": "processing_time",
            "type": "core::integer::u64"
          }
        ]
      },
      {
        "type": "struct",
        "name": "shieldly::types::types::ReserveData",
        "members": [
          {
            "name": "total_funds",
            "type": "core::integer::u256"
          },
          {
            "name": "total_stakers",
            "type": "core::integer::u32"
          },
          {
            "name": "last_yield_distribution",
            "type": "core::integer::u64"
          },
          {
            "name": "yield_rate_bps",
            "type": "core::integer::u16"
          }
        ]
      },
      {
        "type": "interface",
        "name": "shieldly::interface::core::IShieldlyCore",
        "items": [
          {
            "type": "function",
            "name": "register_user",
            "inputs": [],
            "outputs": [
              {
                "type": "core::bool"
              }
            ],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "get_user_profile",
            "inputs": [
              {
                "name": "user",
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ],
            "outputs": [
              {
                "type": "shieldly::types::types::UserProfile"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "update_user_status",
            "inputs": [
              {
                "name": "user",
                "type": "core::starknet::contract_address::ContractAddress"
              },
              {
                "name": "status",
                "type": "shieldly::types::types::UserStatus"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "verify_user_kyc",
            "inputs": [
              {
                "name": "user",
                "type": "core::starknet::contract_address::ContractAddress"
              },
              {
                "name": "kyc_verified",
                "type": "core::bool"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "set_kyc_manager",
            "inputs": [
              {
                "name": "kyc_manager",
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "get_kyc_manager",
            "inputs": [],
            "outputs": [
              {
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "set_admin",
            "inputs": [
              {
                "name": "admin",
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "get_admin",
            "inputs": [],
            "outputs": [
              {
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "pause_contract",
            "inputs": [],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "unpause_contract",
            "inputs": [],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "is_paused",
            "inputs": [],
            "outputs": [
              {
                "type": "core::bool"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "upgrade",
            "inputs": [
              {
                "name": "new_implementation",
                "type": "core::felt252"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "set_pragma_oracle",
            "inputs": [
              {
                "name": "pragma_oracle_address",
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "get_pragma_oracle",
            "inputs": [],
            "outputs": [
              {
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "convert_usd_to_strk",
            "inputs": [
              {
                "name": "usd_amount",
                "type": "core::integer::u256"
              }
            ],
            "outputs": [
              {
                "type": "core::integer::u256"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "set_staking_token",
            "inputs": [
              {
                "name": "token",
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "set_premium_token",
            "inputs": [
              {
                "name": "token",
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "get_staking_token",
            "inputs": [],
            "outputs": [
              {
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "create_policy",
            "inputs": [
              {
                "name": "metadata",
                "type": "shieldly::types::types::PolicyMetadata"
              }
            ],
            "outputs": [
              {
                "type": "core::integer::u256"
              }
            ],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "get_policy",
            "inputs": [
              {
                "name": "policy_id",
                "type": "core::integer::u256"
              }
            ],
            "outputs": [
              {
                "type": "shieldly::types::types::Policy"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "list_policies",
            "inputs": [
              {
                "name": "status",
                "type": "shieldly::types::types::PolicyStatus"
              }
            ],
            "outputs": [
              {
                "type": "core::array::Array::<shieldly::types::types::Policy>"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "activate_policy",
            "inputs": [
              {
                "name": "policy_id",
                "type": "core::integer::u256"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "expire_policy",
            "inputs": [
              {
                "name": "policy_id",
                "type": "core::integer::u256"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "pause_policy",
            "inputs": [
              {
                "name": "policy_id",
                "type": "core::integer::u256"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "buy_policy",
            "inputs": [
              {
                "name": "policy_id",
                "type": "core::integer::u256"
              }
            ],
            "outputs": [
              {
                "type": "core::bool"
              }
            ],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "get_user_policies",
            "inputs": [
              {
                "name": "user",
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ],
            "outputs": [
              {
                "type": "core::array::Array::<shieldly::types::types::UserPolicy>"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "submit_claim",
            "inputs": [
              {
                "name": "policy_id",
                "type": "core::integer::u256"
              },
              {
                "name": "evidence_hash",
                "type": "core::felt252"
              }
            ],
            "outputs": [
              {
                "type": "core::integer::u256"
              }
            ],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "process_claim",
            "inputs": [
              {
                "name": "claim_id",
                "type": "core::integer::u256"
              },
              {
                "name": "external_data_hash",
                "type": "core::felt252"
              },
              {
                "name": "approved",
                "type": "core::bool"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "pay_out_claim",
            "inputs": [
              {
                "name": "claim_id",
                "type": "core::integer::u256"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "get_claim",
            "inputs": [
              {
                "name": "claim_id",
                "type": "core::integer::u256"
              }
            ],
            "outputs": [
              {
                "type": "shieldly::types::types::Claim"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "get_claims_for_policy",
            "inputs": [
              {
                "name": "policy_id",
                "type": "core::integer::u256"
              }
            ],
            "outputs": [
              {
                "type": "core::array::Array::<shieldly::types::types::Claim>"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "get_user_claims",
            "inputs": [
              {
                "name": "user",
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ],
            "outputs": [
              {
                "type": "core::array::Array::<shieldly::types::types::Claim>"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "get_policy_renewals",
            "inputs": [
              {
                "name": "user",
                "type": "core::starknet::contract_address::ContractAddress"
              },
              {
                "name": "policy_id",
                "type": "core::integer::u256"
              }
            ],
            "outputs": [
              {
                "type": "core::integer::u256"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "get_last_renewal",
            "inputs": [
              {
                "name": "user",
                "type": "core::starknet::contract_address::ContractAddress"
              },
              {
                "name": "policy_id",
                "type": "core::integer::u256"
              }
            ],
            "outputs": [
              {
                "type": "core::integer::u64"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "is_whitelisted_renewer",
            "inputs": [
              {
                "name": "renewer",
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ],
            "outputs": [
              {
                "type": "core::bool"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "cancel_auto_renewal",
            "inputs": [
              {
                "name": "policy_id",
                "type": "core::integer::u256"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "auto_renew_policy",
            "inputs": [
              {
                "name": "user",
                "type": "core::starknet::contract_address::ContractAddress"
              },
              {
                "name": "policy_id",
                "type": "core::integer::u256"
              }
            ],
            "outputs": [
              {
                "type": "core::bool"
              }
            ],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "get_renewal_interval",
            "inputs": [
              {
                "name": "user",
                "type": "core::starknet::contract_address::ContractAddress"
              },
              {
                "name": "policy_id",
                "type": "core::integer::u256"
              }
            ],
            "outputs": [
              {
                "type": "core::integer::u256"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "set_whitelisted_renewers",
            "inputs": [
              {
                "name": "renewers",
                "type": "core::array::Array::<core::starknet::contract_address::ContractAddress>"
              },
              {
                "name": "status",
                "type": "core::bool"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "stake_funds",
            "inputs": [
              {
                "name": "amount",
                "type": "core::integer::u256"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "unstake_funds",
            "inputs": [
              {
                "name": "amount",
                "type": "core::integer::u256"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "get_funder_stake",
            "inputs": [
              {
                "name": "funder",
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ],
            "outputs": [
              {
                "type": "core::integer::u256"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "distribute_yield",
            "inputs": [],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "claim_yield",
            "inputs": [],
            "outputs": [
              {
                "type": "core::integer::u256"
              }
            ],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "get_yield_info",
            "inputs": [
              {
                "name": "user",
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ],
            "outputs": [
              {
                "type": "(core::integer::u256, core::integer::u64)"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "get_reserve_info",
            "inputs": [],
            "outputs": [
              {
                "type": "shieldly::types::types::ReserveData"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "get_available_funds",
            "inputs": [],
            "outputs": [
              {
                "type": "core::integer::u256"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "get_weekly_activity_metrics",
            "inputs": [],
            "outputs": [
              {
                "type": "(core::integer::u256, core::integer::u256)"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "get_last_week_activity_metrics",
            "inputs": [],
            "outputs": [
              {
                "type": "(core::integer::u256, core::integer::u256)"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "get_total_activity_metrics",
            "inputs": [],
            "outputs": [
              {
                "type": "(core::integer::u256, core::integer::u256)"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "get_current_dynamic_yield_rate",
            "inputs": [],
            "outputs": [
              {
                "type": "core::integer::u16"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "get_current_yield_rate",
            "inputs": [],
            "outputs": [
              {
                "type": "core::integer::u16"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "get_weekly_claims_metrics",
            "inputs": [],
            "outputs": [
              {
                "type": "(core::integer::u256, core::integer::u256)"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "get_last_week_claims_metrics",
            "inputs": [],
            "outputs": [
              {
                "type": "(core::integer::u256, core::integer::u256)"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "get_loss_ratio",
            "inputs": [],
            "outputs": [
              {
                "type": "core::integer::u16"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "get_yield_rate_stability_info",
            "inputs": [],
            "outputs": [
              {
                "type": "(core::integer::u32, core::integer::u64)"
              }
            ],
            "state_mutability": "view"
          }
        ]
      },
      {
        "type": "impl",
        "name": "OwnableImpl",
        "interface_name": "openzeppelin_access::ownable::interface::IOwnable"
      },
      {
        "type": "interface",
        "name": "openzeppelin_access::ownable::interface::IOwnable",
        "items": [
          {
            "type": "function",
            "name": "owner",
            "inputs": [],
            "outputs": [
              {
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "transfer_ownership",
            "inputs": [
              {
                "name": "new_owner",
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "renounce_ownership",
            "inputs": [],
            "outputs": [],
            "state_mutability": "external"
          }
        ]
      },
      {
        "type": "constructor",
        "name": "constructor",
        "inputs": [
          {
            "name": "owner",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "pragma_oracle_address",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ]
      },
      {
        "type": "event",
        "name": "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferred",
        "kind": "struct",
        "members": [
          {
            "name": "previous_owner",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "key"
          },
          {
            "name": "new_owner",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "key"
          }
        ]
      },
      {
        "type": "event",
        "name": "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
        "kind": "struct",
        "members": [
          {
            "name": "previous_owner",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "key"
          },
          {
            "name": "new_owner",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "key"
          }
        ]
      },
      {
        "type": "event",
        "name": "openzeppelin_access::ownable::ownable::OwnableComponent::Event",
        "kind": "enum",
        "variants": [
          {
            "name": "OwnershipTransferred",
            "type": "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferred",
            "kind": "nested"
          },
          {
            "name": "OwnershipTransferStarted",
            "type": "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
            "kind": "nested"
          }
        ]
      },
      {
        "type": "event",
        "name": "openzeppelin_upgrades::upgradeable::UpgradeableComponent::Upgraded",
        "kind": "struct",
        "members": [
          {
            "name": "class_hash",
            "type": "core::starknet::class_hash::ClassHash",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "openzeppelin_upgrades::upgradeable::UpgradeableComponent::Event",
        "kind": "enum",
        "variants": [
          {
            "name": "Upgraded",
            "type": "openzeppelin_upgrades::upgradeable::UpgradeableComponent::Upgraded",
            "kind": "nested"
          }
        ]
      },
      {
        "type": "event",
        "name": "openzeppelin_security::pausable::PausableComponent::Paused",
        "kind": "struct",
        "members": [
          {
            "name": "account",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "openzeppelin_security::pausable::PausableComponent::Unpaused",
        "kind": "struct",
        "members": [
          {
            "name": "account",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "openzeppelin_security::pausable::PausableComponent::Event",
        "kind": "enum",
        "variants": [
          {
            "name": "Paused",
            "type": "openzeppelin_security::pausable::PausableComponent::Paused",
            "kind": "nested"
          },
          {
            "name": "Unpaused",
            "type": "openzeppelin_security::pausable::PausableComponent::Unpaused",
            "kind": "nested"
          }
        ]
      },
      {
        "type": "event",
        "name": "shieldly::components::policy::PolicyManagerComponent::PolicyCreated",
        "kind": "struct",
        "members": [
          {
            "name": "policy_id",
            "type": "core::integer::u256",
            "kind": "key"
          },
          {
            "name": "creator",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          },
          {
            "name": "coverage_amount",
            "type": "core::integer::u256",
            "kind": "data"
          },
          {
            "name": "premium_amount",
            "type": "core::integer::u256",
            "kind": "data"
          },
          {
            "name": "payout_amount",
            "type": "core::integer::u256",
            "kind": "data"
          },
          {
            "name": "term_days",
            "type": "core::integer::u32",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "shieldly::components::policy::PolicyManagerComponent::PolicyStatusChanged",
        "kind": "struct",
        "members": [
          {
            "name": "policy_id",
            "type": "core::integer::u256",
            "kind": "key"
          },
          {
            "name": "new_status",
            "type": "shieldly::types::types::PolicyStatus",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "shieldly::components::policy::PolicyManagerComponent::PolicyPurchased",
        "kind": "struct",
        "members": [
          {
            "name": "policy_id",
            "type": "core::integer::u256",
            "kind": "key"
          },
          {
            "name": "user",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          },
          {
            "name": "purchase_time",
            "type": "core::integer::u64",
            "kind": "data"
          },
          {
            "name": "expiry_time",
            "type": "core::integer::u64",
            "kind": "data"
          },
          {
            "name": "premium_amount",
            "type": "core::integer::u256",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "shieldly::components::policy::PolicyManagerComponent::ClaimSubmitted",
        "kind": "struct",
        "members": [
          {
            "name": "claim_id",
            "type": "core::integer::u256",
            "kind": "key"
          },
          {
            "name": "policy_id",
            "type": "core::integer::u256",
            "kind": "key"
          },
          {
            "name": "claimant",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          },
          {
            "name": "submission_time",
            "type": "core::integer::u64",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "shieldly::components::policy::PolicyManagerComponent::ClaimProcessed",
        "kind": "struct",
        "members": [
          {
            "name": "claim_id",
            "type": "core::integer::u256",
            "kind": "key"
          },
          {
            "name": "status",
            "type": "shieldly::types::types::ClaimStatus",
            "kind": "data"
          },
          {
            "name": "processing_time",
            "type": "core::integer::u64",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "shieldly::components::policy::PolicyManagerComponent::ClaimPaid",
        "kind": "struct",
        "members": [
          {
            "name": "claim_id",
            "type": "core::integer::u256",
            "kind": "key"
          },
          {
            "name": "policy_id",
            "type": "core::integer::u256",
            "kind": "key"
          },
          {
            "name": "claimant",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          },
          {
            "name": "amount",
            "type": "core::integer::u256",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "shieldly::components::policy::PolicyManagerComponent::PremiumSentToReserve",
        "kind": "struct",
        "members": [
          {
            "name": "policy_id",
            "type": "core::integer::u256",
            "kind": "data"
          },
          {
            "name": "user",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          },
          {
            "name": "amount",
            "type": "core::integer::u256",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "shieldly::components::policy::PolicyManagerComponent::WeeklyPremiumDistributed",
        "kind": "struct",
        "members": [
          {
            "name": "amount",
            "type": "core::integer::u256",
            "kind": "data"
          },
          {
            "name": "timestamp",
            "type": "core::integer::u64",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "shieldly::components::policy::PolicyManagerComponent::PolicyRenewed",
        "kind": "struct",
        "members": [
          {
            "name": "policy_id",
            "type": "core::integer::u256",
            "kind": "key"
          },
          {
            "name": "user",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          },
          {
            "name": "renewal_time",
            "type": "core::integer::u64",
            "kind": "data"
          },
          {
            "name": "premium_amount",
            "type": "core::integer::u256",
            "kind": "data"
          },
          {
            "name": "remaining_renewals",
            "type": "core::integer::u256",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "shieldly::components::policy::PolicyManagerComponent::AutoRenewalCancelled",
        "kind": "struct",
        "members": [
          {
            "name": "policy_id",
            "type": "core::integer::u256",
            "kind": "key"
          },
          {
            "name": "user",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          },
          {
            "name": "cancellation_time",
            "type": "core::integer::u64",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "shieldly::components::policy::PolicyManagerComponent::RenewerStatusUpdated",
        "kind": "struct",
        "members": [
          {
            "name": "renewer",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          },
          {
            "name": "is_whitelisted",
            "type": "core::bool",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "shieldly::components::policy::PolicyManagerComponent::DynamicYieldRateUpdated",
        "kind": "struct",
        "members": [
          {
            "name": "new_yield_rate_bps",
            "type": "core::integer::u16",
            "kind": "data"
          },
          {
            "name": "weekly_policy_count",
            "type": "core::integer::u256",
            "kind": "data"
          },
          {
            "name": "weekly_premium_volume",
            "type": "core::integer::u256",
            "kind": "data"
          },
          {
            "name": "calculation_timestamp",
            "type": "core::integer::u64",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "shieldly::components::policy::PolicyManagerComponent::Event",
        "kind": "enum",
        "variants": [
          {
            "name": "PolicyCreated",
            "type": "shieldly::components::policy::PolicyManagerComponent::PolicyCreated",
            "kind": "nested"
          },
          {
            "name": "PolicyStatusChanged",
            "type": "shieldly::components::policy::PolicyManagerComponent::PolicyStatusChanged",
            "kind": "nested"
          },
          {
            "name": "PolicyPurchased",
            "type": "shieldly::components::policy::PolicyManagerComponent::PolicyPurchased",
            "kind": "nested"
          },
          {
            "name": "ClaimSubmitted",
            "type": "shieldly::components::policy::PolicyManagerComponent::ClaimSubmitted",
            "kind": "nested"
          },
          {
            "name": "ClaimProcessed",
            "type": "shieldly::components::policy::PolicyManagerComponent::ClaimProcessed",
            "kind": "nested"
          },
          {
            "name": "ClaimPaid",
            "type": "shieldly::components::policy::PolicyManagerComponent::ClaimPaid",
            "kind": "nested"
          },
          {
            "name": "PremiumSentToReserve",
            "type": "shieldly::components::policy::PolicyManagerComponent::PremiumSentToReserve",
            "kind": "nested"
          },
          {
            "name": "WeeklyPremiumDistributed",
            "type": "shieldly::components::policy::PolicyManagerComponent::WeeklyPremiumDistributed",
            "kind": "nested"
          },
          {
            "name": "PolicyRenewed",
            "type": "shieldly::components::policy::PolicyManagerComponent::PolicyRenewed",
            "kind": "nested"
          },
          {
            "name": "AutoRenewalCancelled",
            "type": "shieldly::components::policy::PolicyManagerComponent::AutoRenewalCancelled",
            "kind": "nested"
          },
          {
            "name": "RenewerStatusUpdated",
            "type": "shieldly::components::policy::PolicyManagerComponent::RenewerStatusUpdated",
            "kind": "nested"
          },
          {
            "name": "DynamicYieldRateUpdated",
            "type": "shieldly::components::policy::PolicyManagerComponent::DynamicYieldRateUpdated",
            "kind": "nested"
          }
        ]
      },
      {
        "type": "event",
        "name": "shieldly::components::reserve::ReserveManagerComponent::FundsStaked",
        "kind": "struct",
        "members": [
          {
            "name": "funder",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "key"
          },
          {
            "name": "amount",
            "type": "core::integer::u256",
            "kind": "data"
          },
          {
            "name": "total_stake",
            "type": "core::integer::u256",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "shieldly::components::reserve::ReserveManagerComponent::FundsUnstaked",
        "kind": "struct",
        "members": [
          {
            "name": "funder",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "key"
          },
          {
            "name": "amount",
            "type": "core::integer::u256",
            "kind": "data"
          },
          {
            "name": "remaining_stake",
            "type": "core::integer::u256",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "shieldly::components::reserve::ReserveManagerComponent::YieldDistributed",
        "kind": "struct",
        "members": [
          {
            "name": "total_yield",
            "type": "core::integer::u256",
            "kind": "data"
          },
          {
            "name": "timestamp",
            "type": "core::integer::u64",
            "kind": "data"
          },
          {
            "name": "from_premiums",
            "type": "core::bool",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "shieldly::components::reserve::ReserveManagerComponent::YieldClaimed",
        "kind": "struct",
        "members": [
          {
            "name": "user",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "key"
          },
          {
            "name": "amount",
            "type": "core::integer::u256",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "shieldly::components::reserve::ReserveManagerComponent::YieldRateUpdated",
        "kind": "struct",
        "members": [
          {
            "name": "previous_rate_bps",
            "type": "core::integer::u16",
            "kind": "data"
          },
          {
            "name": "new_rate_bps",
            "type": "core::integer::u16",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "shieldly::components::reserve::ReserveManagerComponent::FundsTransferred",
        "kind": "struct",
        "members": [
          {
            "name": "from",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          },
          {
            "name": "to",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          },
          {
            "name": "amount",
            "type": "core::integer::u256",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "shieldly::components::reserve::ReserveManagerComponent::StakingTokenSet",
        "kind": "struct",
        "members": [
          {
            "name": "token",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "shieldly::components::reserve::ReserveManagerComponent::PremiumReceived",
        "kind": "struct",
        "members": [
          {
            "name": "amount",
            "type": "core::integer::u256",
            "kind": "data"
          },
          {
            "name": "current_pool",
            "type": "core::integer::u256",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "shieldly::components::reserve::ReserveManagerComponent::Event",
        "kind": "enum",
        "variants": [
          {
            "name": "FundsStaked",
            "type": "shieldly::components::reserve::ReserveManagerComponent::FundsStaked",
            "kind": "nested"
          },
          {
            "name": "FundsUnstaked",
            "type": "shieldly::components::reserve::ReserveManagerComponent::FundsUnstaked",
            "kind": "nested"
          },
          {
            "name": "YieldDistributed",
            "type": "shieldly::components::reserve::ReserveManagerComponent::YieldDistributed",
            "kind": "nested"
          },
          {
            "name": "YieldClaimed",
            "type": "shieldly::components::reserve::ReserveManagerComponent::YieldClaimed",
            "kind": "nested"
          },
          {
            "name": "YieldRateUpdated",
            "type": "shieldly::components::reserve::ReserveManagerComponent::YieldRateUpdated",
            "kind": "nested"
          },
          {
            "name": "FundsTransferred",
            "type": "shieldly::components::reserve::ReserveManagerComponent::FundsTransferred",
            "kind": "nested"
          },
          {
            "name": "StakingTokenSet",
            "type": "shieldly::components::reserve::ReserveManagerComponent::StakingTokenSet",
            "kind": "nested"
          },
          {
            "name": "PremiumReceived",
            "type": "shieldly::components::reserve::ReserveManagerComponent::PremiumReceived",
            "kind": "nested"
          }
        ]
      },
      {
        "type": "event",
        "name": "shieldly::components::oracle::OracleComponent::PragmaOracleSet",
        "kind": "struct",
        "members": [
          {
            "name": "previous",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          },
          {
            "name": "new",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "shieldly::components::oracle::OracleComponent::Event",
        "kind": "enum",
        "variants": [
          {
            "name": "PragmaOracleSet",
            "type": "shieldly::components::oracle::OracleComponent::PragmaOracleSet",
            "kind": "nested"
          }
        ]
      },
      {
        "type": "event",
        "name": "shieldly::core::ShieldlyCore::UserRegistered",
        "kind": "struct",
        "members": [
          {
            "name": "user",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "key"
          }
        ]
      },
      {
        "type": "event",
        "name": "shieldly::core::ShieldlyCore::UserStatusUpdated",
        "kind": "struct",
        "members": [
          {
            "name": "user",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "key"
          },
          {
            "name": "new_status",
            "type": "shieldly::types::types::UserStatus",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "shieldly::core::ShieldlyCore::UserKycUpdated",
        "kind": "struct",
        "members": [
          {
            "name": "user",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "key"
          },
          {
            "name": "kyc_verified",
            "type": "core::bool",
            "kind": "data"
          },
          {
            "name": "updated_by",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "shieldly::core::ShieldlyCore::PragmaOracleAddressSet",
        "kind": "struct",
        "members": [
          {
            "name": "address",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "shieldly::core::ShieldlyCore::KycManagerSet",
        "kind": "struct",
        "members": [
          {
            "name": "address",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "shieldly::core::ShieldlyCore::Event",
        "kind": "enum",
        "variants": [
          {
            "name": "OwnableEvent",
            "type": "openzeppelin_access::ownable::ownable::OwnableComponent::Event",
            "kind": "flat"
          },
          {
            "name": "UpgradeableEvent",
            "type": "openzeppelin_upgrades::upgradeable::UpgradeableComponent::Event",
            "kind": "flat"
          },
          {
            "name": "PausableEvent",
            "type": "openzeppelin_security::pausable::PausableComponent::Event",
            "kind": "flat"
          },
          {
            "name": "PolicyManagerEvent",
            "type": "shieldly::components::policy::PolicyManagerComponent::Event",
            "kind": "flat"
          },
          {
            "name": "ReserveManagerEvent",
            "type": "shieldly::components::reserve::ReserveManagerComponent::Event",
            "kind": "flat"
          },
          {
            "name": "OracleEvent",
            "type": "shieldly::components::oracle::OracleComponent::Event",
            "kind": "flat"
          },
          {
            "name": "UserRegistered",
            "type": "shieldly::core::ShieldlyCore::UserRegistered",
            "kind": "nested"
          },
          {
            "name": "UserStatusUpdated",
            "type": "shieldly::core::ShieldlyCore::UserStatusUpdated",
            "kind": "nested"
          },
          {
            "name": "UserKycUpdated",
            "type": "shieldly::core::ShieldlyCore::UserKycUpdated",
            "kind": "nested"
          },
          {
            "name": "PragmaOracleAddressSet",
            "type": "shieldly::core::ShieldlyCore::PragmaOracleAddressSet",
            "kind": "nested"
          },
          {
            "name": "KycManagerSet",
            "type": "shieldly::core::ShieldlyCore::KycManagerSet",
            "kind": "nested"
          }
        ]
      }
    ]
  }
}